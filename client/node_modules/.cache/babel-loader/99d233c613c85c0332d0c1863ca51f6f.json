{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshopToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired.\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshopToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/melli/Desktop/Templates/Crown-Clothing-master/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionSnapshopToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AAEA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AAEA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;;AAEA,MAAI;AACJ,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,8BAAD,EAAiCS,QAAjC,CAAjC;AAEA,UAAMX,GAAG,CAAEG,uBAAuB,CAACU,cAAD,CAAzB,CAAT;AAEC,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAAEI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAzB,CAAT;AACD;AAKF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CACXO,eAAe,CAACY,uBADL,EAEVX,qBAFU,CAAf;AAIH","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects'\r\n\r\nimport {firestore, convertCollectionSnapshopToMap} from '../../firebase/firebase.utils';\r\n\r\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions'\r\n\r\n\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log(\"I am fired.\")\r\n\r\n  try {\r\n  const collectionRef = firestore.collection(\"collections\");\r\n  const snapshot = yield collectionRef.get();\r\n  const collectionsMap = yield call(convertCollectionSnapshopToMap, snapshot);\r\n\r\n  yield put (fetchCollectionsSuccess(collectionsMap));\r\n\r\n  } catch (error) {\r\n    yield put (fetchCollectionsFailure(error.message))\r\n  }\r\n  \r\n\r\n\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n         fetchCollectionsAsync\r\n         )\r\n}"]},"metadata":{},"sourceType":"module"}